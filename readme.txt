Ссылка на видео https://disk.yandex.ru/i/RjAidtysuS02tQ
Задание №1
В некотором банке внедрили новую frontend-систему для работы с клиентами, а так же обновили и саму базу данных. Большую часть данных успешно были перенесены из старых БД в одну новую централизованную БД.  Но в момент переключения со старой системы на новую возникли непредвиденные проблемы в ETL-процессе, небольшой период (конец 2017 начало 2018 года) так и остался в старой базе. Старую базу отключили, а не выгруженные данные сохранили в csv-файлы. Недавно банку потребовалось построить отчёт по 101 форме. Те данные что остались в csv-файлах тоже нужны. Загрузить их в новую БД не получиться из-за архитектурных и управленческих сложностей, нужно рассчитать витрину отдельно. Но для этого сначала нужно загрузить исходные данные из csv-файлов в детальный слой (DS) хранилища в СУБД PostgreSQL.

 

Задача 1.1

Разработать ETL-процесс для загрузки «банковских» данных из csv-файлов в соответствующие таблицы СУБД PostgreSQL. Покрыть данный процесс логированием этапов работы и всевозможной дополнительной статистикой (на ваше усмотрение). Обратите внимание, что в разных файлах может быть разный формат даты, это необходимо учитывать при загрузке.

Исходные данные:
Файл «Структура таблиц.docx» – содержит описание и поможет создать таблицы в детальном слое DS
 

Краткое описание данных таблиц:

Таблицы DS.MD_ACCOUNT_D, DS.MD_CURRENCY_D и DS.MD_EXCHANGE_RATE_D содержат информацию о счетах, валютах и курсах валют соответственно. В данных таблицах есть поля data_actual_date и data_actual_end_date, по которым можно определить какие именно записи актуальны в нужную дату. Идентификаторы записей имеют окончание «_rk» (например, account_rk – идентификатор счета).

Таблица DS.MD_LEDGER_ACCOUNT_S – это справочник балансовых счетов. Он регулируется Центральным банком. По нему можно определить к какой главе и к каким разделам относятся счета первого (первые 3 цифры номера счета) и второго (первые 5 цифр номера счета) порядка.

Таблица DS.FT_POSTING_F – это таблица проводок (операций) в рабочем дне (поле oper_date), которая состоит из двух частей: счет дебета и счет кредита, которая изменяет баланс на сумму проводки

 

Требования к реализации задачи:
В своей БД создать пользователя / схему «DS».
Примеры команд:
https://postgrespro.ru/docs/postgresql/9.6/sql-createschema
Создать в DS-схеме таблицы под загрузку данных из csv-файлов.
Начало и окончание работы процесса загрузки данных должно логироваться в специальную логовую таблицу. Эту таблицу нужно придумать самостоятельно. По логам должно быть видно дату и время старта и окончания загрузки, так же можете туда добавить любую дополнительную информацию, которую посчитаете нужным.
После логирования о начале загрузки добавить таймер (паузу) на 5 секунд, чтобы чётко видеть разницу во времени между началом и окончанием загрузки. Из-за небольшого учебного объёма данных – процесс загрузки быстрый;
Для хранения логов нужно в БД создать отдельного пользователя / схему «LOGS» и создать в этой схеме таблицу для логов;
(В случае реализации процесса в Talend) В зависимости от мощностей рабочей станции – сделать загрузку из всех файлов одним потоком в параллели или отдельными потоками (может не хватить оперативной памяти для Java-heap);
Для корректного обновления данных в таблицах детального слоя DS нужно выбрать правильную Update strategy и использовать следующие первичные ключи для таблиц фактов, измерений и справочников (должно быть однозначное уникальное значение, идентифицирующее каждую запись таблицы):
Таблица

Первичный ключ

DS.FT_BALANCE_F

ON_DATE, ACCOUNT_RK

DS.FT_POSTING_F

У данной таблицы нет первичного ключа. Можно считать, что мы всегда в нее будем загружать полный набор данных, поэтому перед каждой загрузкой ее необходимо очищать.

DS.MD_ACCOUNT_D

DATA_ACTUAL_DATE, ACCOUNT_RK

DS.MD_CURRENCY_D

CURRENCY_RK, DATA_ACTUAL_DATE

DS.MD_EXCHANGE_RATE_D

DATA_ACTUAL_DATE, CURRENCY_RK

DS.MD_LEDGER_ACCOUNT_S

LEDGER_ACCOUNT, START_DATE

 

Технологические требования
ETL-процесс по загрузке файлов вы можете сделать с помощью различных технологий, которые вам будут удобней. Возможные варианты технологий:

Talend – бесплатная (для учебных целей) ETL-платформа;
Python – для данного языка существует множество библиотек, в том числе и для работы с базами данных и с различными файлами;
Java / Scala – для этих языков так же существует различные способы для работы с БД и файлами;
(*) Оркестрация процесса загрузки с помощью Airflow. Данный критерий не обязательный, но если вдруг вы сможете самостоятельно понять, установить и применить этот инструмент – это будет большим плюсом.
Требования к демонстрации работы:
Все скрипты и решения необходимо опубликовать в  github и предоставить ссылку на репозиторий. В случае работы в Talend выгрузите и прикрепите поток.
Записать видео с экрана компьютера, в котором вы демонстрируйте и комментируете в слух, то что вы делаете / уже разработали;
Нужно продемонстрировать создание или подробно прокомментировать разработанный вами поток (ETL-процесс);
Продемонстрировать, что поток работает – показать, что в таблице «DS.ft_balance_f» не было записей, потом запустить поток и показать, что таблица наполнилась;
Запись в таблицы должна выполняться в режиме «Запись или замена». Поэтому не забудьте определить ключевые поля для возможности обновлять информацию по уже существующим записям;
Продемонстрируйте как вы в файле «ft_balance_f.csv» меняете баланс для какого-нибудь <account_rk>, показываете что в таблице «DS.ft_balance_f» сперва была одна сумма у этого <account_rk> - потом запускаете ETL-процесс и показываете, что в таблице сумма обновилась;
Это видео загрузите к себе на облако (гугл-диск, яндекс-диск и т.п.) и предоставьте доступ по ссылке;
Приложите в репозиторий github текстовый файл с ссылкой на ваше видео
Примечания:
Если вы решили, что будете применять ETL-инструмент «Talend», то скачать можно отсюда:
https://drive.google.com/file/d/1EckjUqFFayFxVXjmyqSv75WY-joRFJE8/view?usp=drive_link

Для Talend обязательно понадобиться установить Java не ниже 8-й (jdk8.0);
Может оказаться так, что у вас в Talend не хватает каких-то элементов (например, таймер «tSleep») – значит вам нужно будет догрузить пакет дополнительных элементов. Talend сам об этом предложи;
Среды разработки для Python / Java / Scala можете использовать любые, какие вам удобны, главное, чтобы скрипт запускался и работал исправно;
Допустима трансформация csv-файла в excel-файл, если вам так будет удобней. 
